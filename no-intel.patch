diff --git a/src/cpu/cpu.cpp b/src/cpu/cpu.cpp
index a92f111..8a4e77b 100644
--- a/src/cpu/cpu.cpp
+++ b/src/cpu/cpu.cpp
@@ -58,6 +58,8 @@ class perf_power_bundle: public perf_bundle
 };
 
 
+extern int inhibit_intel;
+
 static class abstract_cpu * new_package(int package, int cpu, char * vendor, int family, int model)
 {
 	class abstract_cpu *ret = NULL;
@@ -66,7 +68,7 @@ static class abstract_cpu * new_package(int package, int cpu, char * vendor, int
 	class dram_rapl_device *dram_rapl_dev;
 
 	char packagename[128];
-	if (strcmp(vendor, "GenuineIntel") == 0)
+	if (strcmp(vendor, "GenuineIntel") == 0 && !inhibit_intel)
 		if (family == 6)
 			if (is_supported_intel_cpu(model, cpu)) {
 				ret = new class nhm_package(model);
@@ -107,7 +109,7 @@ static class abstract_cpu * new_core(int core, int cpu, char * vendor, int famil
 {
 	class abstract_cpu *ret = NULL;
 
-	if (strcmp(vendor, "GenuineIntel") == 0)
+	if (strcmp(vendor, "GenuineIntel") == 0 && !inhibit_intel)
 		if (family == 6)
 			if (is_supported_intel_cpu(model, cpu)) {
 				ret = new class nhm_core(model);
@@ -141,7 +143,7 @@ static class abstract_cpu * new_cpu(int number, char * vendor, int family, int m
 {
 	class abstract_cpu * ret = NULL;
 
-	if (strcmp(vendor, "GenuineIntel") == 0)
+	if (strcmp(vendor, "GenuineIntel") == 0 && !inhibit_intel)
 		if (family == 6)
 			if (is_supported_intel_cpu(model, number)) {
 				ret = new class nhm_cpu;
diff --git a/src/main.cpp b/src/main.cpp
index 75d4202..6bd87ed 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -72,6 +72,8 @@
 int debug_learning = 0;
 unsigned time_out = 20;
 int leave_powertop = 0;
+
+int inhibit_intel = 0;
 void (*ui_notify_user) (const char *frmt, ...);
 
 enum {
@@ -94,6 +96,7 @@ static const struct option long_options[] =
 	{"sample",	optional_argument,	NULL,		 's'},
 	{"time",	optional_argument,	NULL,		 't'},
 	{"workload",	optional_argument,	NULL,		 'w'},
+	{"inhibit-intel",no_argument,		NULL,		 'x'},
 	{"version",	no_argument,		NULL,		 'V'},
 	{"help",	no_argument,		NULL,		 'h'},
 	{NULL,		0,			NULL,		 0}
@@ -500,6 +503,9 @@ int main(int argc, char **argv)
 		case 'w':		/* measure workload */
 			snprintf(workload, sizeof(workload), "%s", optarg ? optarg : "");
 			break;
+		case 'x':
+			inhibit_intel = 1;
+			break;
 		case 'V':
 			print_version();
 			exit(0);
